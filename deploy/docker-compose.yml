version: "3.9"

services:
  db:
    image: postgres:16
    container_name: reliant_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: reliant
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d reliant"]
      interval: 5s
      timeout: 3s
      retries: 10

  ai:
    build:
      context: ../ai_service
    container_name: reliant_ai
    env_file:
      - ./ai.env
    ports:
      - "8000:8000"
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import urllib.request,sys; sys.exit(0 if urllib.request.urlopen('http://localhost:8000/health').getcode()==200 else 1)",
        ]
      interval: 5s
      timeout: 3s
      retries: 10

  api:
    build:
      context: ..
      dockerfile: src/Reliant.Api/Dockerfile
    container_name: reliant_api
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
      ConnectionStrings__Default: "Host=db;Database=reliant;Username=postgres;Password=postgres"
      AI__BaseUrl: "http://ai:8000"
      JWT__Key: "test-key-0123456789-0123456789-0123"
      Jwt__Issuer: "reliant"
      Jwt__Audience: "reliant.clients"

    depends_on:
      db:
        condition: service_healthy
      ai:
        condition: service_healthy
    ports:
      - "8080:8080"

  web:
    build:
      context: ../src/Reliant.Angular
    image: deploy_web
    container_name: reliant_web
    depends_on:
      - api
    ports:
      - "8081:80"
    networks:
      - default
